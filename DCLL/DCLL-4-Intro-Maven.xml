<?xml version="1.0" encoding="UTF-8"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         version="5.0">
    <info>
        <title>DCLL 4 - Introduction à Maven</title>
        <author>
            <personname>Franck Silvestre</personname>
            <email>franck.silvestre@irit.fr</email>
        </author>
        <keywordset>
            <keyword>Maven</keyword>
            <keyword role="hashtag">Maven</keyword>
            <keyword role="hashtag">build</keyword>
        </keywordset>
        <legalnotice>
            <para>
                <link xlink:href="http://creativecommons.org/licenses/by-nc/3.0/">Cette oeuvre est mise à disposition
                    selon les termes de la Licence Creative Commons Paternité - Pas d'Utilisation Commerciale 3.0 non
                    transposé.
                </link>
            </para>
        </legalnotice>
    </info>
    <section role="slide" xml:id="dcll_4_1">
        <title>Développement collaboratif</title>
        <blockquote>
            <para>
                Développer de manière collaborative, c'est travailler à plusieurs sur la même base de code pour
                produire un logiciel.
            </para>
        </blockquote>
    </section>
    <section role="slide" xml:id="dcll_4_2">
        <title>"Build" d'un logiciel</title>
        <blockquote>
            <attribution>
                <link xlink:href="http://en.wikipedia.org/wiki/Software_build">Wikipedia</link>
            </attribution>
            <para>
                In the field of computer software, the term software build refers either to the process of converting source code files into standalone software artifact(s) that can be run on a computer, or the result of doing so.
                One of the most important steps of a software build is the compilation process where source code files are converted into executable code.
            </para>
        </blockquote>
    </section>
    <section role="slide" xml:id="dcll_4_3">
        <title>Maven</title>
        <itemizedlist>
            <listitem>
                <para>Gestion de build et de dépendances développé en Java</para>
            </listitem>
            <listitem>
                <para><link xlink:href=" http://maven.apache.org/"> http://maven.apache.org/</link></para>
            </listitem>
            <listitem>
                <para>Objectifs
                <itemizedlist>
                    <listitem>
                        <para>rendre le processus de build facile</para>
                    </listitem>
                    <listitem>
                        <para>fournir un système de build uniforme</para>
                    </listitem>
                    <listitem>
                        <para>fournir des informations de qualité sur le logiciel</para>
                    </listitem>
                    <listitem>
                        <para>fournir un cadre pour les bonnes pratiques de développement</para>
                    </listitem>
                </itemizedlist>
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section role="slide" xml:id="dcll_4_4">
    <title>Installation</title>
        <itemizedlist>
            <listitem>
                <para>Application Java</para>
            </listitem>
            <listitem>
                <para>Télécharger Maven et suivre les instructions du README</para>
            </listitem>
            <listitem>
                <para>Dans la console
                <code>
  $ mvn --version
  Apache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)
  Maven home: /Users/fsil/Applications/springsource/apache-maven-3.0.3
  Java version: 1.6.0_29, vendor: Apple Inc.
  Java home: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
  Default locale: fr_FR, platform encoding: MacRoman
  OS name: "mac os x", version: "10.7.3", arch: "x86_64", family: "mac"
                </code>
                </para>
            </listitem>
        </itemizedlist>
    </section>
    <section role="slide" xml:id="dcll_4_5">
    <title>Créer un premier projet avec Maven</title>
        <para>En Ligne de commande
        <code>
  $ mvn archetype:generate \
  -DarchetypeGroupId=org.apache.maven.archetypes \
  -DgroupId=dcll \
  -DartifactId=demo-app
  ...
  [INFO] ------------------------------------------------------------------------
  [INFO] BUILD SUCCESS
  [INFO] ------------------------------------------------------------------------
  [INFO] Total time: 10.303s
  [INFO] Finished at: Tue Feb 14 13:15:30 CET 2012
  [INFO] Final Memory: 7M/81M
  [INFO] ------------------------------------------------------------------------
        </code>
        </para>
    </section>
    <section role="slide" xml:id="dcll_4_6">
    <title>Arborescence type d'un projet Maven</title>
        <mediaobject>
            <alt>Arborescence de fichiers d'un projet Maven</alt>
            <imageobject>
                <imagedata fileref="images/maven-tree-file.png"/>
            </imageobject>
        </mediaobject>
    </section>
    <section role="slide" xml:id="dcll_4_7">
        <title>Mangez des POMs !</title>
        <!--<mediaobject>-->
            <!--<alt>Arborescence de fichiers d'un projet Maven</alt>-->
            <!--<imageobject>-->
                <!--<imagedata fileref="images/pom.png"/>-->
            <!--</imageobject>-->
        <!--</mediaobject>-->
        <para>
            <code>
                <![CDATA[
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dcll</groupId>
    <artifactId>demo-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>demo-app</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
                ]]>
            </code>
        </para>
        <section role="comments">
            <title>Notes</title>
            <para>Le fichier "pom.xml" à la racine du projet contient la description du projet.</para>
        </section>
    </section>
    <section role="slide" xml:id="dcll_4_8">
        <title>Créer un projet Maven depuis son IDE</title>
        <mediaobject>
            <alt>Wizard Maven dans Eclipse</alt>
            <imageobject>
                <imagedata fileref="images/maven-ide.png"/>
            </imageobject>
        </mediaobject>
    </section>
    <section role="slide" xml:id="dcll_4_9">
    <title>Restons en phase !</title>
        <itemizedlist>
            <listitem>
                <para>Un cycle de vie de build est découpé en phases</para>
            </listitem>
            <listitem>
                <para>Exemples de cycles de vie</para>
                <itemizedlist>
                    <listitem>
                        <para>
                            Clean Lifecycle
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Default Lifecycle
                        </para>
                    </listitem>
                    <listitem>
                        <para>Site Lifecycle</para>
                    </listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
        <section role="comments">
            <title>Notes</title>
            <para>Le cycle de vie «Clean» correspond au build supprimant tous les fichiers générés par le build précédent.
                Le cycle «Default»  correspond au build par défaut : compilation, packaging...
                Le cycle «Site» correspond à la génération du site propre au projet (documentation, ressources,...)</para>
        </section>
    </section>
    <section role="slide" xml:id="dcll_4_10">
    <title>Phases et cycles de vie</title>
        <itemizedlist>
            <listitem>
                <para>Le cycle de vie Clean est composé de 3 phases</para>
                <para>pre-clean, clean, post-clean</para>
            </listitem>
        </itemizedlist>
        <itemizedlist>
            <listitem>
                <para>Le cycle de vie par défaut est composé de 23 phases dont</para>
                <para>process-ressources,
                    compile,
                    process-test-ressources,
                    test-compile,
                    test,
                    package,
                    install,
                    deploy</para>
            </listitem>
        </itemizedlist>
        <section role="comments">
            <title>Notes</title>
            <para>La phase «test» exécute les tests unitaires.
                La phase «integration-test» déploie éventuellement l’artefact généré sur un environnement permettant d’exécuter les tests d’intégration.
                La phase «verify» permet d’exécuter des contrôles qualité.
                La phase «install» déploie l’artefact généré dans le repository local se trouvant par défaut dans ~/.m2 .
                La phase «deploy» déploie l’artefact dans un repository distant.</para>
        </section>
    </section>
    <section role="slide" xml:id="dcll_4_11">
    <title>Exécuter des phases de build avec Maven</title>
        <para>
            <code>
 $ mvn clean package
 ...
 [INFO] ------------------------------------------------------------------------
 [INFO] Building demo-app 1.0-SNAPSHOT
 [INFO] ------------------------------------------------------------------------
 ...
 [INFO] --- maven-clean-plugin:2.4.1:clean (default-clean) @ demo-app ---
 ...
 [INFO] --- maven-surefire-plugin:2.7.2:test (default-test) @ demo-app ---
 ...
 -------------------------------------------------------
 T E S T S
 -------------------------------------------------------
 Running dcll.AppTest
 Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec

 Results :

 Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
 ...
 [INFO] --- maven-jar-plugin:2.3.1:jar (default-jar) @ demo-app ---
 ...
            </code>
        </para>
        <section role="comments">
            <title>Notes</title>
            <para>
                On peut enchaîner l’exécution de plusieurs phases ci-dessus, la phase clean et la phase build sont exécutés l’une après l’autre.
                Toutes les phases qui précèdent la phase à exécuter sont exécutées.
                Dans notre exemple ci-dessus les phases suivantes seront exécutées :
                pre-clean, clean, validate, compile, test et package.
            </para>
        </section>
    </section>
    <section role="slide" xml:id="dcll_4_12">
    <title>Gooooaaalll !</title>
        <itemizedlist>
            <listitem>
                <para>Une phase est composée de goals</para>
            </listitem>
            <listitem>
                <para>Un goal est une tâche spécifique</para>
            </listitem>
            <listitem>
                <para>Un goal est attaché  ou non à une phase</para>
            </listitem>
            <listitem>
                <para>«Binding» du Default Lifecycle d’un projet de packaging «jar»</para>
            </listitem>
        </itemizedlist>
        <mediaobject>
            <alt>Mapping phases - goals</alt>
            <imageobject>
                <imagedata fileref="images/phase-goal.png"/>
            </imageobject>
        </mediaobject>
    </section>
    <section role="slide" xml:id="dcll_4_13">
    <title>Gérer les dépendances</title>
        <para>
            <code>
                <![CDATA[
 <project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dcll</groupId>
    <artifactId>demo-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>demo-app</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
                ]]>
            </code>
        </para>
        <section role="comments">
            <title>Notes</title>
            <para>Un artefact est caractérisé de manière unique par son groupId, son artefactId et sa version.
                Le scope permet de définir la portée de la dépendance : quel classpath est affecté par la dépendance dans les différentes phases de build</para>
        </section>
    </section>
    <section role="slide" xml:id="dcll_4_14">
    <title>Les différents scopes</title>
        <itemizedlist>
            <listitem>
                <para><emphasis>compile</emphasis></para>
                <para>utilisé si aucun scope n’est fourni explicitement
                    les dépendances sont disponibles dans tous les classpaths</para>
            </listitem>
            <listitem>
                <para><emphasis>provided</emphasis></para>
                <para>la dépendance est fournie par le JDK ou un conteneur;
                    les classpaths concernés : compilation et test</para>
            </listitem>
            <listitem>
                <para><emphasis>runtime</emphasis></para>
                <para>la dépendance n’est pas requise à la compilation mais l’est à l’exécution;
                    les classpaths concernés : runtime et test</para>
            </listitem>
            <listitem>
                <para><emphasis>test</emphasis></para>
                <para>la dépendance n’est nécessaire que pour l’exécution des test</para>
            </listitem>
            <listitem>
                <para><emphasis>system</emphasis></para>
                <para>similaire à «provided» mais spécification de  la localisation du jar nécessaire</para>
            </listitem>
            <listitem>
                <para><emphasis>import</emphasis></para>
                <para>permet l’import des dépendances associées à un notre POM</para>
            </listitem>
        </itemizedlist>
    </section>
</article>
